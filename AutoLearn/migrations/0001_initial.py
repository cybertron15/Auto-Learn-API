# Generated by Django 4.2.7 on 2023-11-20 07:39

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ChatIdTable',
            fields=[
                ('chat_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('UID', models.IntegerField()),
                ('topicid', models.IntegerField()),
            ],
            options={
                'db_table': 'chatidtable',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ChatInfo',
            fields=[
                ('chatinfo_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('chat_id', models.IntegerField()),
                ('chat_q', models.TextField()),
                ('chat_A', models.TextField()),
                ('chat_notes', models.TextField()),
                ('time', models.DateTimeField()),
            ],
            options={
                'db_table': 'chatinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CourseInfo',
            fields=[
                ('course', models.CharField(max_length=50)),
                ('level_info', models.CharField(max_length=50)),
                ('courseid', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'courseinfo',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('topicid', models.BigAutoField(primary_key=True, serialize=False)),
                ('courseid', models.IntegerField()),
                ('content', models.TextField()),
                ('tname', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'topic',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('email', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=600)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserCourseInfo',
            fields=[
                ('UID', models.BigAutoField(primary_key=True, serialize=False)),
                ('Id', models.ForeignKey(db_column='id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('courseid', models.ForeignKey(db_column='courseid', on_delete=django.db.models.deletion.CASCADE, to='AutoLearn.courseinfo')),
            ],
            options={
                'db_table': 'usercourseinfo',
                'managed': True,
            },
        ),
    ]
